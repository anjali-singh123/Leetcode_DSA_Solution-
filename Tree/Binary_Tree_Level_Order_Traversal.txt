/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void solve(TreeNode* root, vector<vector<int>>& ans){

        queue<TreeNode*> q;
        if(root == NULL){
            return;
        }
        else{
            q.push(root);
            q.push(NULL);
            vector<int> v;

            while(!q.empty()){
                TreeNode* temp = q.front();
                q.pop();
                if(temp!=NULL){
                    v.push_back(temp->val);
                    if(temp->left){
                        q.push(temp->left);
                    }
                    if(temp->right){
                        q.push(temp->right);
                    }
                }
                else{
                    ans.push_back(v);
                    if(!q.empty()){
                        while(v.size()!=0){
                            v.pop_back();
                        }
                        q.push(NULL);
                    }
                    
                }
            }
        }
        return;
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        solve(root,ans);
        return ans;
    }
};
